{"version":3,"sources":["Components/Profile/Profile.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","contentHeader","formUser","userAvatarBlock","userAvatar","userDescriptionBlock","descriptionTitle","userDescription","status","summaryError","form__newPost","newPost__title","post","post__img","postCol","Post","props","react_default","a","createElement","className","style","alt","src","msg","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","Object","toConsumableArray","postsData","reverse","map","p","MyPosts_Post_Post","key","id","console","log","createRef","s","postsBlock","values","addPost","newPostText","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileDataReduxForm","_ref","profile","error","formSummaryError","createField","Input","type","keys","contacts","contact","ProfileData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","onClick","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","updateUserStatus","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","Components_Profile_Profile","assign","Component","compose","userProfile","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6203e72f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"Profile_contentHeader__1VJrD\",\"formUser\":\"Profile_formUser__1rsod\",\"userAvatarBlock\":\"Profile_userAvatarBlock__JgE2C\",\"userAvatar\":\"Profile_userAvatar__2xGdc\",\"userDescriptionBlock\":\"Profile_userDescriptionBlock__3z4_C\",\"descriptionTitle\":\"Profile_descriptionTitle__3Ww1C\",\"userDescription\":\"Profile_userDescription__1fNir\",\"status\":\"Profile_status__15koB\",\"summaryError\":\"Profile_summaryError__ihB-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__newPost\":\"MyPosts_form__newPost__3G6TV\",\"newPost__title\":\"MyPosts_newPost__title__3mo7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2clD-\",\"post__img\":\"Post_post__img__2t5Ua\",\"postCol\":\"Post_postCol__32NYl\"};","import React from \"react\";\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={style.post}>\r\n            <img className={style.post__img}  alt='' src=\"https://th.bing.com/th/id/R.bf5e1eba30b53dffbc6a0353361855d4?rik=7duhy3rpO8d7MQ&riu=http%3a%2f%2feskipaper.com%2fimages%2favatar-3.jpg&ehk=YnIJUh9Lgb92QMa1swP9zHGNKXU66it9IG4vR41p6I4%3d&risl=&pid=ImgRaw&r=0\" />\r\n            <div className={style.postCol}>\r\n                <div className=\"post__message\">{props.msg}</div>\r\n                <div className=\"likes\">Likes: {props.likesCount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.postsData]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} msg={p.post} likesCount={p.likesCount}/>);\r\n    console.log(postsElements)\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => { dispatch(updateNewPostTextActionCreator(text)) },\r\n    addPost: (newPostText) => { dispatch(addPostActionCreator(newPostText)) }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport style from '../Profile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.status}>\r\n            { !editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode} >{props.status || \"----------\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}  onBlur={deactivateEditMode} \r\n                    onChange={onStatusChange} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { createField, Input, Textarea } from \"../../common/FormControls/FormControls\"\r\nimport { reduxForm } from \"redux-form\";\r\nimport style from '../Profile.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    <div><button>save</button></div>\r\n    {error && <div className={style.formSummaryError}>\r\n      {error}\r\n    </div>\r\n    }\r\n    <div>\r\n      <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n    </div>\r\n\r\n    <div>\r\n      <b>My professional skills</b>:\r\n      {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n    </div>\r\n    <div>\r\n      <b>About me</b>:\r\n      {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={style.contact}>\r\n          <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n        </div>\r\n      })}\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from 'react';\r\nimport style from '../Profile.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.jpg'\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.formUser}>\r\n        <div className={style.userAvatarBlock}>\r\n          <img className={style.userAvatar} src={profile.photos.large || userPhoto} />\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n        <div className={style.userDescriptionBlock}>\r\n          <div className={style.descriptionTitle}>Description</div>\r\n          {editMode\r\n            ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile} />\r\n            : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => { setEditMode(true) }} />}\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div className={style.userDescription}>\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Loking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b> My skills </b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n      {/* // этого еще не было в доке на момент записи видео, но оно приходило */}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n  </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={style.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateUserStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile } from '../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\ndebugger\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateUserStatus={this.props.updateUserStatus} \r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.userProfile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile }),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}