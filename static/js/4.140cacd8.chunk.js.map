{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem.jsx","Components/Dialogs/AddMsgForm.jsx","Components/Dialogs/Message.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","dialog","messages","message","DialogItem","props","path","id","react_default","a","createElement","className","style","NavLink","to","name","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Message","msg","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","el","ind","Dialogs_DialogItem","key","messagesElements","messagesData","Dialogs_Message","newMsgBody","isAuth","Dialogs_AddMsgForm","values","sendMsg","Redirect","mapStateToPropsRedirect","auth","compose","connect","dispatch","sendMsgCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,2HCaHC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMX,QACpBO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIR,GAAOD,EAAMU,yCCH1BC,EAAeC,YAAiB,KAoBvBC,cAAU,CAAEC,KAAM,2BAAlBD,CAjBI,SAACb,GAChB,OACIG,EAAAC,EAAAC,cAAA,QAAMU,SAAUf,EAAMgB,cAClBb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,YAAY,WACfR,KAAK,aACLS,UAAWC,IACXC,SAAU,CAACC,IAAUX,MAE7BR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,2BCVNkB,EANC,SAACvB,GACb,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMT,SAAUE,EAAMwB,eCgC7BC,EA7BC,SAACzB,GAEf,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,YAAYC,IAAI,SAACC,EAAIC,GAAL,OAAc7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAYvB,KAAMqB,EAAGrB,KAAMR,GAAI6B,EAAG7B,GAAIgC,IAAKF,MACjGG,EAAmBT,EAAMU,aAAaN,IAAI,SAACC,EAAIC,GAAL,OAAc7B,EAAAC,EAAAC,cAACgC,EAAD,CAASb,IAAKO,EAAGP,IAAKU,IAAKF,MACtEN,EAAMY,WAMvB,OAAItC,EAAMuC,OAGRpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAMd,SACrBU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMb,cACnBkC,GAGHzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMV,UACnBsC,IAEHhC,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,SAhBF,SAAC0B,GACfzC,EAAM0C,QAAQD,EAAOH,gBAGEnC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAUlC,GAAI,4DCfrCmC,EAA0B,SAAClB,GAAD,MAAY,CAAEa,OAAQb,EAAMmB,KAAKN,gBCiBhDO,sBACGC,YAdI,SAACrB,GACrB,MAAO,CACLC,YAAaD,EAAMC,cAIE,SAACqB,GACxB,MAAO,CACLN,QAAS,SAACJ,GAAiBU,EAASC,YAAeX,QDTvB,SAACY,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAjB,IAAA,SAAA4B,MAAA,WAInC,OAAKP,KAAKvD,MAAMuC,OACTpC,EAAAC,EAAAC,cAAC6C,EAAcK,KAAKvD,OADIG,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAUlC,GAAG,eAJT0C,EAAA,CAEXY,IAAMb,WAStC,OAFqCH,YAAQH,EAARG,CAAiCI,ICK3DL,CAGGrB","file":"static/js/4.140cacd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2C8WM\",\"dialogsItems\":\"Dialogs_dialogsItems__1BYNS\",\"active\":\"Dialogs_active__3tvn2\",\"dialog\":\"Dialogs_dialog__2HrW9\",\"messages\":\"Dialogs_messages__2OpQb\",\"message\":\"Dialogs_message__pF3ul\"};","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={style.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../common/FormControls/FormControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\n\r\nconst AddMsgForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder='Type Msg'\r\n                    name=\"newMsgBody\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength100]} />\r\n            </div>\r\n            <div>\r\n                <div><button>Send</button></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMsgForm);","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n      <div className={style.message}>{props.msg}</div>\r\n    );\r\n  }\r\n  \r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem\";\r\nimport AddMsgForm from \"./AddMsgForm\";\r\nimport Message from \"./Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogsData.map((el, ind) => (<DialogItem name={el.name} id={el.id} key={ind} />));\r\n  let messagesElements = state.messagesData.map((el, ind) => (<Message msg={el.msg} key={ind} />));\r\n  let newMsgBody = state.newMsgBody;\r\n\r\n  let addNewMsg = (values) => {\r\n    props.sendMsg(values.newMsgBody);\r\n  }\r\n\r\n  if(!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n  return (\r\n    <div>\r\n      <main className={style.dialogs}>\r\n        <div className={style.dialogsItems}>\r\n          {dialogsElements}\r\n        </div>\r\n\r\n        <div className={style.messages}>\r\n          {messagesElements}</div>\r\n      </main>\r\n        <AddMsgForm onSubmit={addNewMsg}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport { sendMsgCreator } from \"../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMsg: (newMsgBody) => { dispatch(sendMsgCreator(newMsgBody)); }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n                  connect(mapStateToProps, mapDispatchToProps),\r\n                  withAuthRedirect\r\n                )(Dialogs);"],"sourceRoot":""}